package frontend;

import backend.Identitaet;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Objects;

/**
 * Created by steven on 18.07.17.
 */
public class EditIdentitaetWindow {
    public JPanel editIdentPanel;
    private JComboBox identAll;
    private JTextField identName;
    private JButton editButtonIdent;
    private JButton deleteButtonIdent;


    public EditIdentitaetWindow() {
        ArrayList<Identitaet> idents = new ArrayList<>();

        try {
            idents = Identitaet.getObjectsFromJson(Identitaet.read(Identitaet.getPath()), Identitaet[].class);
        } catch (IOException e) {
            e.printStackTrace();
        }

        for (Identitaet p : idents) identAll.addItem(p);


        //Wartet auf Auswahl und zeigt diese dann im Namensfenster an
        identAll.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    identName.setText(identAll.getSelectedItem().toString());
                }
            }
        });

        //Bearbeiten des jeweiligen Bereiches
        editButtonIdent.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Identitaet newIdent = new Identitaet();

                try {
                    ArrayList<Identitaet> identArr = Identitaet.getObjectsFromJson(Identitaet.read(Identitaet.getPath()), Identitaet[].class);

                    for (int i = 0; i < identArr.size(); i++) {
                        if (Objects.equals(identAll.getSelectedItem().toString(), identArr.get(i).getName())) {
                            newIdent.setName(identName.getText());
                            identArr.set(i, newIdent);
                            Identitaet.write(Identitaet.getPath(), Identitaet.getJsonFromObjects(identArr));
                            break;
                        }
                    }

                } catch (IOException e1) {
                    e1.printStackTrace();
                }

            }
        });

        //Löschen des jeweiligen Bereiches
        deleteButtonIdent.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Identitaet newIdent = new Identitaet();

                try {
                    ArrayList<Identitaet> IdentArr = Identitaet.getObjectsFromJson(Identitaet.read(Identitaet.getPath()), Identitaet[].class);

                    for (int i = 0; i < IdentArr.size(); i++) {
                        if (Objects.equals(identAll.getSelectedItem().toString(), IdentArr.get(i).getName())) {
                            newIdent.setName(identName.getText());
                            IdentArr.remove(i);
                            Identitaet.write(Identitaet.getPath(), Identitaet.getJsonFromObjects(IdentArr));
                            break;
                        }
                    }

                } catch (IOException e1) {
                    e1.printStackTrace();
                }

            }
        });


    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        editIdentPanel = new JPanel();
        editIdentPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        identAll = new JComboBox();
        editIdentPanel.add(identAll, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Identitäten: ");
        editIdentPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        identName = new JTextField();
        editIdentPanel.add(identName, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        editIdentPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        editButtonIdent = new JButton();
        editButtonIdent.setText("Speichern");
        panel1.add(editButtonIdent, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        deleteButtonIdent = new JButton();
        deleteButtonIdent.setText("Löschen");
        panel1.add(deleteButtonIdent, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Identitätsname: ");
        editIdentPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return editIdentPanel;
    }
}
